<?xml version="1.0" encoding="UTF-8"?>
<devdesc version="0.1"
         xsi:schemaLocation="http://www.section5.ch/dclib/schema/devdesc devdesc.xsd"
         xmlns="http://www.section5.ch/dclib/schema/devdesc"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns22="http://www.w3.org/1999/xhtml"
         xmlns:ns2="http://www.xmlmind.com/xmleditor/schema/bugreport"
         xmlns:ns="http://www.section5.ch/dclib/schema/devdesc"
         xmlns:memmap="http://www.section5.ch/dclib/schema/memmap"
         xmlns:interfaces="http://www.section5.ch/dclib/schema/interfaces"
         xmlns:html="http://www.xmlmind.com/xmleditor/schema/xhtml"
         xmlns:hfp="http://www.w3.org/2001/XMLSchema-hasFacetAndProperty">
  <vendor>section5</vendor>

  <!--// (c) 2020 <hackfin@section5.ch>
-->

  <revision>
    <major>0</major>

    <minor>0</minor>

    <extension>develop</extension>
  </revision>

  <header language="Python">
from insn_register import *</header>

  <device id="LWinsn" name="LWInstruction" protocol="PROPERTY">
    <revision>
      <major>0</major>

      <minor>0</minor>

      <extension>develop</extension>
    </revision>

    <registermap endian="BIG" id="insn" name="insn">
      <register addr="0x00" id="IW" size="2">
        <bitfield lsb="0" msb="2" name="STACKOP"/>

        <bitfield lsb="3" msb="5" name="PC"/>

        <bitfield lsb="6" msb="9" name="WR"/>

        <bitfield lsb="10" msb="11" name="WA"/>

        <bitfield lsb="12" msb="14" name="EVT"/>

        <bitfield lsb="15" msb="15" name="HAZ_ST1">
          <info>Hazard bit for 'st1' case</info>
        </bitfield>
      </register>

      <register addr="0x00" id="PCMode">
        <bitfield lsb="3" msb="3" name="F_HOLD"/>

        <bitfield lsb="4" msb="4" name="F_JMP"/>

        <bitfield lsb="5" msb="5" name="F_ISBRANCH"/>
      </register>

      <register addr="0x00" id="StackOp" size="1">
        <bitfield lsb="0" msb="0" name="SP_PUSH">
          <info>When set, push value to SP</info>
        </bitfield>

        <bitfield lsb="1" msb="1" name="SP_POP">
          <info>Pop value from SP</info>
        </bitfield>

        <bitfield lsb="2" msb="2" name="SP_POPSP">
          <info>Pop stack pointer value from SP</info>
        </bitfield>
      </register>

      <register addr="0x00" id="Event" size="2">
        <bitfield lsb="14" msb="14" name="TRAP">
          <info>Software trap bit (debug unit)</info>
        </bitfield>
      </register>
    </registermap>

    <group name="LWInstructions">
      <property name="PCmode" type="MODE">
        <regref bits="PC" ref="IW"/>

        <choice>
          <item name="INC">
            <value>0</value>
          </item>

          <item name="HOLD">
            <value>1</value>
          </item>

          <item name="EVT">
            <value>2</value>
          </item>

          <item name="JMP">
            <value>6</value>
          </item>

          <item name="RET">
            <value>7</value>
          </item>
        </choice>
      </property>

      <property name="WRmode" type="MODE">
        <regref bits="WR" ref="IW"/>

        <choice>
          <item name="NONE">
            <value>0</value>
          </item>

          <item name="SPVAL">
            <value>1</value>
          </item>

          <item name="PC">
            <value>2</value>
          </item>

          <item name="IM">
            <value>3</value>
          </item>

          <item name="PUSHSP">
            <value>4</value>
          </item>

          <item name="NOT">
            <value>5</value>
          </item>

          <item name="FLIP">
            <value>6</value>
          </item>

          <item name="ACC">
            <value>7</value>
          </item>

          <item name="ADD">
            <value>8</value>
          </item>

          <item name="AND">
            <value>9</value>
          </item>

          <item name="OR">
            <value>10</value>
          </item>

          <item name="NOT">
            <value>11</value>
          </item>
        </choice>
      </property>

      <property name="WAmode" type="MODE">
        <regref bits="WA" ref="IW"/>

        <choice>
          <item name="NONE">
            <value>0</value>
          </item>

          <item name="SP">
            <value>1</value>
          </item>

          <item name="INDIR">
            <value>2</value>
          </item>

          <item name="OFFS">
            <value>3</value>
          </item>
        </choice>
      </property>

      <property name="Event" type="MODE">
        <regref bits="EVT" ref="IW"/>

        <choice>
          <item name="NOEVT">
            <value>0</value>
          </item>

          <item name="IO_STORE">
            <value>1</value>
          </item>

          <item name="IO_LOAD">
            <value>2</value>
          </item>

          <item name="IRQ_UNLOCK">
            <value>3</value>
          </item>

          <item name="DEBUG">
            <value>4</value>
          </item>

          <item name="ILLEGAL">
            <value>7</value>
          </item>
        </choice>
      </property>
    </group>
  </device>
</devdesc>
